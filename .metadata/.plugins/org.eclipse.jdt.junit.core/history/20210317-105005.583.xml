<?xml version="1.0" encoding="UTF-8"?><testrun name="AppTest" project="string.calculator" tests="9" started="9" failures="1" errors="0" ignored="0">
  <testsuite name="com.string.calculator.AppTest" time="0.013">
    <testcase name="testTwoString" classname="com.string.calculator.AppTest" time="0.0"/>
    <testcase name="testEmptyString" classname="com.string.calculator.AppTest" time="0.0"/>
    <testcase name="testThreeNumbers" classname="com.string.calculator.AppTest" time="0.0"/>
    <testcase name="testOneString" classname="com.string.calculator.AppTest" time="0.0"/>
    <testcase name="testNewLine" classname="com.string.calculator.AppTest" time="0.0"/>
    <testcase name="testNegativeNumber" classname="com.string.calculator.AppTest" time="0.0"/>
    <testcase name="testNumberGreaterThousand" classname="com.string.calculator.AppTest" time="0.013">
      <failure>java.lang.AssertionError: expected:&lt;2&gt; but was:&lt;1002&gt;&#13;
	at org.junit.Assert.fail(Assert.java:74)&#13;
	at org.junit.Assert.failNotEquals(Assert.java:448)&#13;
	at org.junit.Assert.assertEquals(Assert.java:102)&#13;
	at org.junit.Assert.assertEquals(Assert.java:323)&#13;
	at org.junit.Assert.assertEquals(Assert.java:319)&#13;
	at com.string.calculator.AppTest.testNumberGreaterThousand(AppTest.java:69)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)&#13;
	at java.lang.reflect.Method.invoke(Method.java:498)&#13;
	at org.junit.internal.runners.TestMethod.invoke(TestMethod.java:59)&#13;
	at org.junit.internal.runners.MethodRoadie.runTestMethod(MethodRoadie.java:98)&#13;
	at org.junit.internal.runners.MethodRoadie$2.run(MethodRoadie.java:79)&#13;
	at org.junit.internal.runners.MethodRoadie.runBeforesThenTestThenAfters(MethodRoadie.java:87)&#13;
	at org.junit.internal.runners.MethodRoadie.runTest(MethodRoadie.java:77)&#13;
	at org.junit.internal.runners.MethodRoadie.run(MethodRoadie.java:42)&#13;
	at org.junit.internal.runners.JUnit4ClassRunner.invokeTestMethod(JUnit4ClassRunner.java:88)&#13;
	at org.junit.internal.runners.JUnit4ClassRunner.runMethods(JUnit4ClassRunner.java:51)&#13;
	at org.junit.internal.runners.JUnit4ClassRunner$1.run(JUnit4ClassRunner.java:44)&#13;
	at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:27)&#13;
	at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:37)&#13;
	at org.junit.internal.runners.JUnit4ClassRunner.run(JUnit4ClassRunner.java:42)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</failure>
    </testcase>
    <testcase name="testMultipleNegativeNumber" classname="com.string.calculator.AppTest" time="0.0"/>
    <testcase name="testDifferentDelimeter" classname="com.string.calculator.AppTest" time="0.0"/>
  </testsuite>
</testrun>
